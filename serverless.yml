# NOTE: update this with your service name
service: signature-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-southeast-2
  lambdaHashingVersion: 20201221
  environment:
    SDK_KEY: bMIKgJdCLWbPduqA1wsiEC0Ecmgp03bhqAn9
    SDK_SECRET: KB7FPIUKHuo7ZGGrGsxEAbhlGDUEDGRv9NMV
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

functions:
  create:
    handler: create.main
    events:
      - http:
          path: signature
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: get.main
    events:
      - http:
          path: room
          method: get
          cors: true
          authorizer: aws_iam

cors:
  origin: '*'
  headers:
    - Content-Type
    - X-Amz-Date
    - Authorization
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  allowCredentials: false

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}